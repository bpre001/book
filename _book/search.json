[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STAT765 Assignment",
    "section": "",
    "text": "1 Introduction",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#objective",
    "href": "index.html#objective",
    "title": "STAT765 Assignment",
    "section": "1.1 Objective",
    "text": "1.1 Objective\nThe objective of this project is to produce 3-day forecasts of net energy use for the Cohaus residential development of 20 apartments at 11-13 Surrey Crescent, Grey Lynn, Auckland.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "STAT765 Assignment",
    "section": "1.2 Data",
    "text": "1.2 Data\nThe data for this project will be collected from the residential development itself (of which the author is an owner-resident). In network terms, Cohaus is a “customer network” meaning that its Body Corporate negotiate one whoesale energy supply contract with an electricity retailer and then individually meters each of the 20 dwellings based on their energy consumption. Cohaus has also installed solar generation capacity that is applied locally, and if any surplus remains is sold back to the electricity retailer.\nI have nearly 3 years of aggregate and anonymized individual 30-minute metered electricity usage data from the 20 private dwellings and will also include metered usage in the commons (including centralised hot water system, electric car chargers, communal laundry, bike shed and garden house). Solar power generation data is metered on 30-minute intervals as well.\nExogenous variables, especially weather data (ambient and dry temperatures, sunlight hours, cloud cover, precipitation) will also be collected from NIWA and incorporated into the model. As energy consumption exhibits significant seasonality (intra-day, daily, weekly, monthly) these factors will need to be incorporated into the model.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#exploratory-ideas",
    "href": "index.html#exploratory-ideas",
    "title": "STAT765 Assignment",
    "section": "1.3 Exploratory Ideas",
    "text": "1.3 Exploratory Ideas\nTo start with, the data on solar generation, centralised hot water, and electric car pool usage will be collected and organized. The data will be cleaned and processed to remove any missing or erroneous entries. Next, time series analysis techniques will be applied to the solar generation data to forecast future energy production. Statistical models will be developed to forecast the demand for centralised hot water based on historical consumption patterns. The forecasts for private and communal energy consumption and solar generation will be netted to provide a comprehensive short term consumption / generation forecast for Cohaus.\nAfter wrangling the data, I’m key to do a “shoot out” of sorts by training a battery (no pun intended) of short-term prediction models on the data given. From simple to more complex I hope to build the following models:\n\nNaive model with seasonal adjustments (intra-day, intra-week, inter-quarter)\nSTL1 model\nARIMAx2 model\nProphet model\nRecurring Neural Network (possibly Long-Short Term Memory) model",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#challenges",
    "href": "index.html#challenges",
    "title": "STAT765 Assignment",
    "section": "1.4 Challenges",
    "text": "1.4 Challenges\nThe accuracy of the short term forecasts may be affected by external factors such as weather conditions, changes in occupancy patterns, and variations in electric car usage. These factors will need to be carefully considered and accounted for in the forecasting models. The availability and quality of data on solar generation, centralised hot water, and electric car usage may vary. The first year of data collected includes considerable time when residents were in COVID-19 related lockdowns, and this may not prove valuable in training a model to produce short term forecasts now. Seasonality is layered and complex (spanning intra-day through inter-quarter) and will need to be modeled carefully. Data collection and data quality assurance processes will need to be implemented to ensure reliable and accurate forecasts. The integration of forecasts for energy generation, hot water demand, and electric car usage may require the development of a sophisticated modeling framework that can capture the interdependencies between these variables.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "STAT765 Assignment",
    "section": "",
    "text": "Seasonal and Trend decomposition using Loess.↩︎\nAuto Regressive Integrated Moving Average with exogenous variables.↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data Processing",
    "section": "",
    "text": "2.1 Goal\nThe objective of this project is to produce 3-day forecasts of net energy use for the Cohaus residential development of 20 apartments at 11-13 Surrey Crescent, Grey Lynn, Auckland.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Processing</span>"
    ]
  },
  {
    "objectID": "data.html#data-source",
    "href": "data.html#data-source",
    "title": "2  Data Processing",
    "section": "2.2 Data Source",
    "text": "2.2 Data Source\nCohaus was completed in July 2021 and teh community moved in shortly thereafter,, Cohaus has installed solar generation capacity that is applied locally, and if any surplus remains is sold back to the electricity retailer. The data for this project has been collected from the residential development itself (of which the author is an owner-resident). Hourly kWh electricity use and generation measures for the period from January 1, 2022 0:00 NZST through February 29, 2024 23:00 NZST inclusive are categorised follows:\n\nAPT aggregate apartment electricity use\nCS common services (lighting, laundry, bike shed, garden house)\nEV electric vehicle chargers\nHP centralised hot water and heat pumps\nGen photo-voltaic electricity generation\n\nNet energy use NetUse (i.e. pulled / (pushed) to the grid) is calculated by summing these five measures. Note in my wrangling, I have down-sampled to an hourly resolution.\nFor each hourly period, if NetUse is positive, then Cohaus is importing electricity from the grid. If NetUse is negative, then Cohaus is exporting electricity to the grid. The difference between Import and Export is the NetImport. It is important to note that the Use/Gen and Import/Export measures are different for each time period due to the offset of use and generation within each period. This reflects the fact that depending on the hour of the day, Cohaus’ solar generation may be in deficit or surplus to the demand of the residents and there is no battery storage onsite, necessitating an import or export from the grid.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Processing</span>"
    ]
  },
  {
    "objectID": "data.html#meteorological-data",
    "href": "data.html#meteorological-data",
    "title": "2  Data Processing",
    "section": "2.3 Meteorological Data",
    "text": "2.3 Meteorological Data\nElectricity Use and Generation at Cohaus is influenced by a number of meteorological factors. For example, heating when temperatures are below 20\\(^{\\circ}\\)C. I collected hourly meteorological data from CliFlo for the weather station at MOTAT (Auckland Museum of Transport and Technology) which is the closest to Cohaus. Meteorological data collected includes:\n\nTdry Dry-bulb Temperature (\\({circ}\\)C)\nAT Ambient Temperature (\\({circ}\\)C)\nRH Relative Humidity (%)\nSpd Wind Speed (m/s)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Processing</span>"
    ]
  },
  {
    "objectID": "data.html#seasonal-dummy-variables",
    "href": "data.html#seasonal-dummy-variables",
    "title": "2  Data Processing",
    "section": "2.4 Seasonal Dummy Variables",
    "text": "2.4 Seasonal Dummy Variables\nI have created a number of boolean dummy variables to capture seasonal effects. These include:\n\nYear, Quarter, Month, Day, Week and Hour\nsunUp determines whether observation time is between sunrise and sunset on that day. Times have been pulled from the suncalc package\nworkDay is TRUE if the observation is on a workday (Mon-Fri) and not an Auckland public holiday. Auckland public holidays are sourced from the NZ government’s MBIE website.\n\n$$ Summary Statistics\n\nsummary(cohaus_wide)\n\n      dttm                          APT               CS        \n Min.   :2022-01-01 00:00:00   Min.   : 1.437   Min.   :0.1720  \n 1st Qu.:2022-07-17 11:45:00   1st Qu.: 2.986   1st Qu.:0.2830  \n Median :2023-01-30 23:30:00   Median : 4.520   Median :0.4136  \n Mean   :2023-01-30 23:30:00   Mean   : 5.174   Mean   :0.5655  \n 3rd Qu.:2023-08-16 11:15:00   3rd Qu.: 6.335   3rd Qu.:0.7350  \n Max.   :2024-02-29 23:00:00   Max.   :26.585   Max.   :3.8398  \n                                                                \n       EV                HP                Gen               Use        \n Min.   :0.01799   Min.   : 0.06398   Min.   : 0.0000   Min.   : 1.944  \n 1st Qu.:0.04297   1st Qu.: 0.11800   1st Qu.: 0.0000   1st Qu.: 4.512  \n Median :0.04398   Median : 0.12000   Median : 0.1826   Median : 6.853  \n Mean   :0.50713   Mean   : 1.43564   Mean   : 5.7007   Mean   : 7.683  \n 3rd Qu.:0.13081   3rd Qu.: 1.32455   3rd Qu.: 9.6382   3rd Qu.:10.063  \n Max.   :7.26914   Max.   :10.95870   Max.   :44.8546   Max.   :32.294  \n                                                                        \n     NetUse            Import           Export         sunUp       workDay     \n Min.   :-34.646   Min.   : 0.000   Min.   : 0.000   FALSE:9289   FALSE: 6120  \n 1st Qu.: -1.727   1st Qu.: 0.000   1st Qu.: 0.000   TRUE :9671   TRUE :12840  \n Median :  3.542   Median : 3.542   Median : 0.000                             \n Mean   :  1.982   Mean   : 4.807   Mean   : 2.825                             \n 3rd Qu.:  7.530   3rd Qu.: 7.530   3rd Qu.: 1.727                             \n Max.   : 32.294   Max.   :32.294   Max.   :34.646                             \n                                                                               \n      Tdry             RH             Spd               AT         \n Min.   : 2.00   Min.   : 30.0   Min.   : 0.000   Min.   :-0.2804  \n 1st Qu.:13.60   1st Qu.: 69.0   1st Qu.: 1.400   1st Qu.:11.7558  \n Median :16.70   Median : 82.0   Median : 2.800   Median :15.4950  \n Mean   :16.56   Mean   : 79.9   Mean   : 2.948   Mean   :15.5094  \n 3rd Qu.:19.90   3rd Qu.: 93.0   3rd Qu.: 4.200   3rd Qu.:19.5512  \n Max.   :29.20   Max.   :100.0   Max.   :11.400   Max.   :29.4112  \n                                                                   \n      hour            week           month      quarter       year     \n H00    :  790   W01    :  504   M01    :2232   Q01:5760   Y2022:8760  \n H01    :  790   W02    :  504   M02    :2040   Q02:4368   Y2023:8760  \n H02    :  790   W03    :  504   M03    :1488   Q03:4416   Y2024:1440  \n H03    :  790   W04    :  504   M05    :1488   Q04:4416               \n H04    :  790   W05    :  504   M07    :1488                          \n H05    :  790   W06    :  504   M08    :1488                          \n (Other):14220   (Other):15936   (Other):8736                          \n\nyrsum &lt;- cohaus_wide |&gt;\n  group_by(year(dttm)) |&gt; \n  summarise(Use = sum(Use),\n            Gen = -sum(Gen),\n            NetUse = sum(NetUse),\n            Import = sum(Import),\n            Export = -sum(Export)\n            ) |&gt; \n  rename(Yr = `year(dttm)`) |&gt;\n  mutate(NetImport = Import + Export) |&gt; \n  mutate(across(where(is.numeric) & !Yr, ~ round(., digits = 1))) |&gt; \n  print()\n\n# A tibble: 3 × 7\n     Yr    Use     Gen NetUse Import  Export NetImport\n  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n1  2022 67027  -49749. 17278. 42824. -25546.    17278.\n2  2023 70023. -46400. 23623. 44407  -20784.    23623.\n3  2024  8613. -11935. -3323.  3904.  -7226.    -3323.\n\nqtrsum &lt;- cohaus_wide |&gt;\n  filter(dttm &gt;= dmy(01012022),\n         dttm &lt; dmy(01012023)) |&gt; \n  group_by(yearquarter(dttm)) |&gt; \n  summarise(Use = sum(Use),\n            Gen = -sum(Gen),\n            NetUse = sum(NetUse),\n            Import = sum(Import),\n            Export = -sum(Export)\n            ) |&gt; \n  rename(YrQtr = `yearquarter(dttm)`) |&gt;\n  mutate(NetImport = Import + Export) |&gt; \n  mutate(across(where(is.numeric) & !YrQtr, ~ round(., digits = 1))) |&gt; \n  print()\n\n# A tibble: 4 × 7\n    YrQtr    Use     Gen NetUse Import  Export NetImport\n    &lt;qtr&gt;  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n1 2022 Q1 13280. -17209. -3929.  6709. -10637.    -3929.\n2 2022 Q2 17386.  -8186.  9200. 12346.  -3147.     9200.\n3 2022 Q3 21030.  -8584. 12446  15375.  -2929.    12446 \n4 2022 Q4 15331. -15770   -439.  8394.  -8833.     -439.\n\nmthsum &lt;- cohaus_wide |&gt;\n  filter(dttm &gt;= dmy(01042022),\n         dttm &lt; dmy(01072022)) |&gt; \n  group_by(yearmonth(dttm)) |&gt; \n  summarise(Use = sum(Use),\n            Gen = -sum(Gen),\n            NetUse = sum(NetUse),\n            Import = sum(Import),\n            Export = -sum(Export)\n            ) |&gt; \n  rename(YrMth = `yearmonth(dttm)`) |&gt;\n  mutate(NetImport = Import + Export) |&gt; \n  mutate(across(where(is.numeric) & !YrMth, ~ round(., digits = 1))) |&gt; \n  print()\n\n# A tibble: 3 × 7\n     YrMth   Use    Gen NetUse Import Export NetImport\n     &lt;mth&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n1 2022 Apr 4958. -3588.  1370.  3084. -1714.     1370.\n2 2022 May 5712. -2670.  3042.  4072. -1030.     3042.\n3 2022 Jun 6716. -1928   4788.  5191.  -403.     4788.\n\ndaysum &lt;- cohaus_wide |&gt;\n  filter(dttm &gt;= dmy(01042022),\n         dttm &lt; dmy(01052022)) |&gt; \n  group_by(day(dttm)) |&gt; \n  summarise(Use = sum(Use),\n            Gen = -sum(Gen),\n            NetUse = sum(NetUse),\n            Import = sum(Import),\n            Export = -sum(Export)\n            ) |&gt; \n  rename(Day = `day(dttm)`) |&gt;\n  mutate(NetImport = Import + Export) |&gt; \n  mutate(across(where(is.numeric) & !Day, ~ round(., digits = 1))) |&gt; \n  print()\n\n# A tibble: 30 × 7\n     Day   Use    Gen NetUse Import Export NetImport\n   &lt;int&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1     1  164. -137.    26.5   91    -64.5      26.5\n 2     2  157. -136.    20.9   89.7  -68.7      20.9\n 3     3  174. -154     20.1  107.   -86.7      20.1\n 4     4  159. -108.    51.2  110.   -58.3      51.2\n 5     5  156.  -64.2   92.2  109.   -17        92.2\n 6     6  172. -124.    47.9  102.   -54.6      47.9\n 7     7  180. -168.    12.6  106.   -93.3      12.6\n 8     8  152. -116     36.5   92.3  -55.8      36.5\n 9     9  164. -174.    -9.5   89.8  -99.3      -9.5\n10    10  165. -168.    -3.5   93.2  -96.6      -3.5\n# ℹ 20 more rows\n\nhoursum &lt;- cohaus_wide |&gt;\n  filter(dttm &gt;= dmy(01042022),\n         dttm &lt; dmy(02042022)) |&gt; \n  group_by(hour(dttm)) |&gt; \n  summarise(Use = sum(Use),\n            Gen = -sum(Gen),\n            NetUse = sum(NetUse),\n            Import = sum(Import),\n            Export = -sum(Export)\n            ) |&gt; \n  rename(Hour = `hour(dttm)`) |&gt;\n  mutate(NetImport = Import + Export) |&gt; \n  mutate(across(where(is.numeric) & !Hour, ~ round(., digits = 1))) |&gt; \n  print()\n\n# A tibble: 24 × 7\n    Hour   Use   Gen NetUse Import Export NetImport\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1     0   5.1   0      5.1    5.1      0       5.1\n 2     1   4.3   0      4.3    4.3      0       4.3\n 3     2   4.2   0      4.2    4.2      0       4.2\n 4     3   4.1   0      4.1    4.1      0       4.1\n 5     4  11.2   0     11.2   11.2      0      11.2\n 6     5   3     0      3      3        0       3  \n 7     6   3.1   0      3.1    3.1      0       3.1\n 8     7   5.2  -0.1    5.1    5.1      0       5.1\n 9     8   7.6  -2.1    5.5    5.5      0       5.5\n10     9   8.7  -6.1    2.6    2.6      0       2.6\n# ℹ 14 more rows",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Processing</span>"
    ]
  },
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "3  Exploration",
    "section": "",
    "text": "3.1 Time Series Display\nHaving cleaned the data, I have coerced to be a tsibble object and am using Hydman’s fpp3package to explore the data.\nThe first three tome series displays are for the month of January 2022 and look at the hourly Usage, Generation and Net Usage for Cohaus. The ACF plots for all three show a strong diurnal autocorrelation pattern.\nlibrary(tidyverse)\n\ncohaus_ts |&gt; \n  filter(dttm &lt; dmy(\"01022022\")) |&gt;\n  gg_tsdisplay(Use, plot_type = \"histogram\") + \n  labs(title = \"Cohaus Electricity Usage for Jan 2022 (kWh)\")\n\n\n\n\n\n\n\ncohaus_ts |&gt; \n  filter(dttm &lt; dmy(\"01022022\")) |&gt;\n  gg_tsdisplay(Gen, plot_type = \"histogram\") + \n  labs(title = \"Cohaus Electricity Generation for Jan 2022 (kWh)\")\n\n\n\n\n\n\n\ncohaus_ts |&gt; \n  filter(dttm &lt; dmy(\"01022022\")) |&gt;\n  gg_tsdisplay(NetUse, plot_type = \"histogram\") + \n  labs(title = \"Cohaus Electricity Net Usage\",\n        subtitle = \"January 2022\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Exploration</span>"
    ]
  },
  {
    "objectID": "exploration.html#pairs-plot",
    "href": "exploration.html#pairs-plot",
    "title": "3  Exploration",
    "section": "3.2 Pairs Plot",
    "text": "3.2 Pairs Plot\nAgain for the month of January 2024, I have created a pairs plot of Usage, Generation and Temperature (dry bulb). There appears to be significant correlation between all three variables - which makes sense - we associate warm temperatures with sunshine (and hence generation) and residential energy consumption tends to happen during the day (in fact it peaks in the morning and evenings).\n\ncohaus_wide |&gt; \n  filter(month == \"M01\",\n         year == \"Y2024\") |&gt; \n  select(Use,Gen,AT) |&gt; \n  ggpairs(progress = FALSE) +\n  labs(title = \"Cohaus Pairs Plot for Use, Gen and Temp\",\n       subtitle = \"January 2024\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Exploration</span>"
    ]
  },
  {
    "objectID": "exploration.html#electricity-generation",
    "href": "exploration.html#electricity-generation",
    "title": "3  Exploration",
    "section": "3.3 Electricity Generation",
    "text": "3.3 Electricity Generation\n\ncohaus_ts |&gt;\n  ggplot(aes(x = hour(dttm), y = Gen)) +\n  geom_jitter(alpha = 0.1, col = \"orange\") +\n  stat_summary(fun = mean, geom = \"line\", col = \"red\") +\n  facet_wrap(~quarter, ncol = 2) +  \n  labs(title = \"Cohaus Electricity Generation (kWh)\")\n\n\n\n\n\n\n\n\n\ncohaus_ts |&gt;\n  ggplot(aes(x = Use, color = quarter)) +\n  geom_density(alpha = 0.1) +\n  facet_wrap(~workDay, ncol = 4, labeller = \"label_both\") +\n  labs(title = \"Cohaus Electricity Usage Density (kWh)\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Exploration</span>"
    ]
  },
  {
    "objectID": "exploration.html#electricity-usage",
    "href": "exploration.html#electricity-usage",
    "title": "3  Exploration",
    "section": "3.4 Electricity Usage",
    "text": "3.4 Electricity Usage\nHere we look at the components of Cohaus usage. The common services (CS) are relatively constant throughout the day, whereas the apartment (APT) usage peaks in the morning and evening. The EV charging (EV) peaks in the evening. The heat pump is used to centrally heat water that is utilised by each of the apartments at Cohaus. Note that heat pump usage peaks in the morning and late afternoon as the centralised hot water is scheduled to come on each day and is well insulated between these times.\n\ncohaus_wide |&gt;\n  pivot_longer(cols = c(APT,CS,EV,HP), \n               names_to = \"Measure\",\n               values_to = \"kWh\") |&gt;\n  ggplot(aes(x = yearmonth(dttm), y = kWh, fill = Measure)) +\n  geom_col()\n\n\n\n\n\n\n\ncohaus_ts |&gt;\n  ggplot(aes(x = hour(dttm), y = APT)) +\n  geom_jitter(alpha = 0.1, col = \"orange\") +\n  facet_grid(quarter~workDay, labeller = \"label_both\") +\n  labs(title = \"Cohaus APT Electricity Use (kWh)\")\n\n\n\n\n\n\n\ncohaus_ts |&gt; \n  ggplot(aes(x = hour(dttm), y = EV)) +\n  geom_jitter(alpha = 0.1, col = \"green\") +\n  labs(title = \"Cohaus EV Electricity Use (kWh)\")\n\n\n\n\n\n\n\ncohaus_ts |&gt;\n  ggplot(aes(x = hour(dttm), y = HP)) +\n  geom_jitter(alpha = 0.05, col = \"red\") +\n  facet_wrap(~quarter, ncol = 2) +\n  labs(title = \"Cohaus Heat Pump Electricity Use (kWh)\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Exploration</span>"
    ]
  },
  {
    "objectID": "models.html",
    "href": "models.html",
    "title": "4  Models",
    "section": "",
    "text": "Having wrangled the data into an indexable, time series form, there are a three models that I would like to apply.\nThe approach that I will take for modelling, predicting and simulating Cohaus Net Usage will be modelled using the hourly Net Usage data. By modelling Net Usage (rather than Use and Generation separately) we implicitly capture the correlation between the two sub models (and don’t have to assume independence).\nTime series models that I would like to consider include:\nTo benchmark model performance, I would consider a seasonal daily naive model (SNaive) and a seasonal average model (Saverage). These models are simple and can be used to compare the performance of more complex models.\nMore complex models to be built and analysed would include: 1. Linear Model (LM) - using a linear model to predict NetUse including a linear trend, seasonality (time of day, work day indicator, month), and exogeneous variates such as temperature. 2. Error-Trend-Seasonality (‘ETS’) - implement Holt and Winter’s model that incorporates seasonality. 3. Seasonal Auto Regressive Model with exogeneous variates (SARx) - a more complex model that includes seasonality, autoregression and exogeneous variates.\n\nfit_stl &lt;- cohaus_ts |&gt; \n  model(stl = STL(NetUse ~ \n                    season(period = \"day\") + \n                    season(period = \"week\") + \n                    trend(window = 8761), robust = TRUE) \n        ) \n\nfit_stl |&gt; \n  components()|&gt; \n  filter(dttm &gt;= dmy(01012022),\n         dttm &lt; dmy(01032024)) |&gt; \n  autoplot() \n\n\n\n\n\n\n\n\n\nfit_lm &lt;- cohaus_ts |&gt; \n  model(lm = TSLM(NetUse ~ hour + sunUp + workDay +\n                    quarter + Tdry))\n        \nfit_lm |&gt; report()\n\nSeries: NetUse \nModel: TSLM \n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-23.10138  -2.96692   0.09185   2.91301  24.49282 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   9.94530    0.32311  30.780  &lt; 2e-16 ***\nhourH01      -0.94969    0.26914  -3.529 0.000419 ***\nhourH02      -1.40010    0.26919  -5.201 2.00e-07 ***\nhourH03      -1.57421    0.26926  -5.846 5.11e-09 ***\nhourH04       5.20897    0.26934  19.340  &lt; 2e-16 ***\nhourH05      -2.03521    0.26938  -7.555 4.38e-14 ***\nhourH06      -1.67932    0.26980  -6.224 4.94e-10 ***\nhourH07      -0.12861    0.29383  -0.438 0.661603    \nhourH08      -2.02212    0.33423  -6.050 1.48e-09 ***\nhourH09      -5.68315    0.33441 -16.995  &lt; 2e-16 ***\nhourH10      -8.10874    0.33522 -24.189  &lt; 2e-16 ***\nhourH11     -10.20867    0.33621 -30.364  &lt; 2e-16 ***\nhourH12     -11.83191    0.33691 -35.118  &lt; 2e-16 ***\nhourH13     -12.74321    0.33729 -37.782  &lt; 2e-16 ***\nhourH14     -12.16183    0.33742 -36.044  &lt; 2e-16 ***\nhourH15      -9.06350    0.33715 -26.882  &lt; 2e-16 ***\nhourH16      -1.46496    0.33649  -4.354 1.35e-05 ***\nhourH17       2.77803    0.33559   8.278  &lt; 2e-16 ***\nhourH18       6.73448    0.29932  22.499  &lt; 2e-16 ***\nhourH19       6.13612    0.29130  21.065  &lt; 2e-16 ***\nhourH20       6.23636    0.27925  22.333  &lt; 2e-16 ***\nhourH21       5.59332    0.26940  20.762  &lt; 2e-16 ***\nhourH22       4.22788    0.26922  15.704  &lt; 2e-16 ***\nhourH23       1.94770    0.26914   7.237 4.77e-13 ***\nsunUpTRUE    -1.09955    0.19899  -5.526 3.33e-08 ***\nworkDayTRUE  -0.25940    0.08317  -3.119 0.001818 ** \nquarterQ02    3.63082    0.12750  28.476  &lt; 2e-16 ***\nquarterQ03    3.48923    0.14905  23.410  &lt; 2e-16 ***\nquarterQ04   -0.05826    0.11506  -0.506 0.612659    \nTdry         -0.42896    0.01333 -32.177  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.349 on 18930 degrees of freedom\nMultiple R-squared: 0.6752, Adjusted R-squared: 0.6747\nF-statistic:  1357 on 29 and 18930 DF, p-value: &lt; 2.22e-16\n\nfit_lm |&gt; gg_tsresiduals()\n\n\n\n\n\n\n\n\n\nfit_ets &lt;- cohaus_ts |&gt; \n  model(etsANA = ETS(NetUse ~ error(\"A\") + \n                       trend(\"N\") + \n                       season(\"A\", period = 24))\n        )\n                  \n\nfit_ets |&gt; components() |&gt; \n    filter(dttm &gt;= dmy(01012023),\n           dttm &lt; dmy(01042023)) |&gt; \n    autoplot()\n\n\n\n\n\n\n\nfit_ets |&gt; forecast(h = \"3 days\") |&gt; autoplot()\n\n\n\n\n\n\n\nfit_ets |&gt; augment() |&gt; select(-.model) |&gt; tail()\n\n# A tsibble: 6 x 5 [1h] &lt;UTC&gt;\n  dttm                NetUse .fitted .resid .innov\n  &lt;dttm&gt;               &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 2024-02-29 18:00:00   4.10    9.00 -4.90  -4.90 \n2 2024-02-29 19:00:00   3.71    9.71 -6.00  -6.00 \n3 2024-02-29 20:00:00   7.70    8.37 -0.665 -0.665\n4 2024-02-29 21:00:00   6.46    9.04 -2.57  -2.57 \n5 2024-02-29 22:00:00   5.79    6.79 -0.996 -0.996\n6 2024-02-29 23:00:00   3.70    5.19 -1.49  -1.49 \n\n\n\nfit_arx &lt;- cohaus_ts |&gt; \n  model(lm = TSLM(NetUse ~ lag(NetUse) + hour + sunUp + workDay +\n                    quarter + Tdry))\n        \nfit_arx |&gt; report()\n\nSeries: NetUse \nModel: TSLM \n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-18.32296  -1.89075   0.00383   1.77611  26.30535 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  1.299463   0.224481   5.789 7.20e-09 ***\nlag(NetUse)  0.744671   0.004908 151.720  &lt; 2e-16 ***\nhourH01      0.498249   0.181107   2.751  0.00594 ** \nhourH02      0.742124   0.181440   4.090 4.33e-05 ***\nhourH03      0.894850   0.181671   4.926 8.48e-07 ***\nhourH04      7.790308   0.181788  42.854  &lt; 2e-16 ***\nhourH05     -4.526866   0.181768 -24.905  &lt; 2e-16 ***\nhourH06      1.008234   0.182165   5.535 3.16e-08 ***\nhourH07      0.991702   0.197572   5.019 5.23e-07 ***\nhourH08     -2.736324   0.224621 -12.182  &lt; 2e-16 ***\nhourH09     -4.696833   0.224780 -20.895  &lt; 2e-16 ***\nhourH10     -4.291837   0.226635 -18.937  &lt; 2e-16 ***\nhourH11     -4.487986   0.229024 -19.596  &lt; 2e-16 ***\nhourH12     -4.432555   0.231562 -19.142  &lt; 2e-16 ***\nhourH13     -4.059147   0.233734 -17.367  &lt; 2e-16 ***\nhourH14     -2.753721   0.235034 -11.716  &lt; 2e-16 ***\nhourH15     -0.019583   0.234239  -0.084  0.93337    \nhourH16      5.348112   0.230498  23.202  &lt; 2e-16 ***\nhourH17      4.005190   0.225623  17.752  &lt; 2e-16 ***\nhourH18      5.660898   0.201246  28.129  &lt; 2e-16 ***\nhourH19      2.044089   0.197589  10.345  &lt; 2e-16 ***\nhourH20      2.854723   0.188965  15.107  &lt; 2e-16 ***\nhourH21      2.765324   0.181990  15.195  &lt; 2e-16 ***\nhourH22      1.553279   0.181771   8.545  &lt; 2e-16 ***\nhourH23      0.271341   0.181195   1.498  0.13428    \nsunUpTRUE    1.201110   0.134535   8.928  &lt; 2e-16 ***\nworkDayTRUE -0.066125   0.055890  -1.183  0.23677    \nquarterQ02   1.054536   0.087325  12.076  &lt; 2e-16 ***\nquarterQ03   0.969666   0.101500   9.553  &lt; 2e-16 ***\nquarterQ04  -0.081248   0.077300  -1.051  0.29323    \nTdry        -0.120490   0.009183 -13.120  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.593 on 18928 degrees of freedom\nMultiple R-squared: 0.8534, Adjusted R-squared: 0.8532\nF-statistic:  3674 on 30 and 18928 DF, p-value: &lt; 2.22e-16\n\nfit_arx |&gt; gg_tsresiduals()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_bin()`).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Models</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "5  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Summary</span>"
    ]
  }
]